{"version":3,"sources":["img/logo.jpg","img/background.png","customHooks/api.js","customHooks/useLocalStorage.js","customHooks/useAuth.js","components/listItemLink.js","components/drawer.js","components/header.js","components/spinner.js","customHooks/useAvisos.js","containers/Avisos.js","components/listaImagem.js","containers/DetalhesAviso.js","components/warnNotLoggedUser.js","containers/Inicio.js","containers/Mapa.js","containers/NotFound.js","containers/PrivateRoute.js","customHooks/useForm.js","forms/aviso.js","containers/ProcessarAviso.js","App.js","index.js"],"names":["module","exports","api","create","baseURL","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","firebaseConfig","firebase","apiKey","authDomain","projectId","appID","useFirebaseContext","createContext","ProvideAuth","children","auth","history","useHistory","user","setUser","usuario","setUsuario","idToken","setIdToken","setApiKey","showWarning","setShowWarning","loginUsuario","a","login","then","token","post","headers","response","data","mensagem","status","push","signout","toggleShowWarning","api_key","googleAuthProvider","GoogleAuthProvider","signInWithPopup","credential","cadastroUsuario","formValues","signOut","useEffect","unsubscribe","onAuthStateChanged","signup","sendPasswordResetEmail","email","confirmPasswordReset","code","password","useProvideAuth","Provider","useAuth","useContext","ListItemLink","props","icon","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","innerRef","ListItem","button","component","ListItemIcon","ListItemText","useStyles","makeStyles","theme","drawer","width","flexShrink","drawerPaper","toolbar","mixins","AppDrawer","classes","Drawer","className","variant","paper","List","Divider","style","onClick","appBar","zIndex","backgroundColor","height","toolBar","display","justifyContent","link","color","Header","AppBar","position","Toolbar","Typography","noWrap","RouterLink","margin","marginTop","marginLeft","Spinner","fetchAviso","id","get","result","fotos","length","forEach","foto","src","fetchImagem","url","fetchAllAvisos","updateAviso","aviso","put","root","borderRadius","tableWrapper","overflow","Chamados","avisos","setAvisos","fetchData","rows","sort","b","tipo","moment","dataHora","format","bairro","endereco","acao","Button","columns","field","title","minWidth","localization","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","nRowsSelected","searchPlaceholder","searchTooltip","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","flexWrap","palette","background","imagem","maxHeight","gridList","transform","light","titleBar","ListaImagem","imagens","GridList","cols","map","tile","GridListTile","GridListTileBar","padding","spacing","textAlign","formControl","erro","textarea","minHeight","rightIcon","marginBottom","DetalhesAviso","setAviso","avisoId","useLocation","pathname","split","Paper","Grid","container","direction","justify","alignItems","xs","md","FormControl","fullWidth","InputLabel","htmlFor","Input","readOnly","usuario_nome","usuario_email","usuario_telefone","logradouro","type","numero","complemento","shrink","TextareaAutosize","descricao","placeholder","bottom","right","WarnNotLoggedUser","setTimeout","Chip","deleteIcon","label","getContrastText","card","maxWidth","Inicio","makeRequest","setMakeRequest","from","state","replace","content","Card","CardContent","CardMedia","alt","image","logo","Mapa","useLoadScript","googleMapsApiKey","isLoaded","loadError","NotFound","substr","PrivateRoute","rest","render","useForm","callback","inputs","values","setValues","errors","handleChange","event","persist","target","name","handleSubmit","preventDefault","Transition","Slide","AvisoForm","open","setOpen","timestamp","coordenadas","lat","lng","handleClose","gutterBottom","onSubmit","defaultValue","onChange","user_id","nome","telefone","rua","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","ProcessarAviso","backgroundImage","fundo","backgroundSize","overflowY","main","flexGrow","App","CssBaseline","exact","path","Avisos","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.92efd75d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff2997c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.05fbaa3b.png\";","import { create } from \"apisauce\";\r\n\r\nexport const api = create({\r\n    //Base json-db:\r\n    // baseURL: \"http://localhost:3004\"\r\n\r\n    //Back-end aplicação:\r\n    baseURL: \"http://167.172.117.77:3001\"\r\n    // baseURL: \"http://localhost:3001\"\r\n\r\n    //baseURL: \"http://192.168.43.196:3001\"\r\n    // baseURL: \"http://192.168.137.94:3001\"\r\n})","import { useState } from 'react';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            // Get from local storage by key\r\n            const item = window.localStorage.getItem(key);\r\n            // Parse stored json or if none return initialValue\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            // If error also return initialValue\r\n            console.log(error);\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n        try {\r\n            // Allow value to be a function so we have same API as useState\r\n            const valueToStore =\r\n                value instanceof Function ? value(storedValue) : value;\r\n            // Save state\r\n            setStoredValue(valueToStore);\r\n            // Save to local storage\r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n            // A more advanced implementation would handle the error case\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n}","// Hook (use-auth.js)\r\nimport { api } from \"./api\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport * as React from 'react';\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCzxKqnfjCJRVO6LsB8JYzcVXZVhbCUsmA\",\r\n  authDomain: \"defesa-civil-contagem-54fe7.firebaseapp.com\",\r\n  databaseURL: \"https://defesa-civil-contagem-54fe7.firebaseio.com\",\r\n  projectId: \"defesa-civil-contagem-54fe7\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"985053180633\",\r\n  appId: \"1:985053180633:web:4d105c6bc93f1ae8e7c4c8\"\r\n};\r\n\r\n// Add your Firebase credentials\r\nfirebase.initializeApp({\r\n  apiKey: firebaseConfig.apiKey,\r\n  authDomain: firebaseConfig.authDomain,\r\n  projectId: firebaseConfig.projectId,\r\n  appID: firebaseConfig.appId\r\n});\r\n\r\nconst useFirebaseContext = createContext();\r\n\r\n// Provider component that wraps your app and makes auth object ...\r\n// ... available to any child component that calls useAuth().\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <useFirebaseContext.Provider value={auth}>{children}</useFirebaseContext.Provider>;\r\n}\r\n\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\nexport const useAuth = () => {\r\n  return useContext(useFirebaseContext);\r\n};\r\n\r\n// Provider hook that creates auth object and handles state\r\nfunction useProvideAuth() {\r\n  let history = useHistory();\r\n\r\n  //user = autenticacao Google\r\n  const [user, setUser] = useLocalStorage('user', null);\r\n  //usuario = autenticacao Aplicação  \r\n  const [usuario, setUsuario] = useLocalStorage('usuario', null);\r\n  //idToken = token de auth do google\r\n  const [idToken, setIdToken] = useLocalStorage('idToken', null);\r\n  //apiKey = chave gerada pelo servidor\r\n  const [apiKey, setApiKey] = useLocalStorage('apiKey', null);\r\n\r\n  const [showWarning, setShowWarning] = useState(false);\r\n\r\n  const loginUsuario = async () => {\r\n    try {\r\n      return login()\r\n        .then(token => {\r\n          setIdToken(token);\r\n          api.post(`/auth/google/login2`, {},\r\n            {\r\n              headers: {\r\n                'authorization': `Bearer ${token}`\r\n              }\r\n            })\r\n            .then(function (response) {\r\n              if (response.data && response.data.mensagem === \"Usuário não cadastrado\" || response.status != 200) {\r\n                history.push('/');\r\n                signout();\r\n                toggleShowWarning();\r\n              } else if (response.data && response.data.api_key) {\r\n                setApiKey(response.data.api_key);\r\n                setUsuario(response.data.usuario);\r\n                history.push('/Mapa')\r\n              }\r\n            })\r\n        })\r\n    } catch (err) {\r\n      console.error(`Houve um problema na autenticação: ${err}`)\r\n    }\r\n  }\r\n\r\n  const login = async () => {\r\n    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    return firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(response => {\r\n        console.log(response);\r\n        setUser(response.user)\r\n        return response.credential.idToken;\r\n      });\r\n  };\r\n\r\n  // const loginEmailSenha = (email, password) => {\r\n  //   return firebase\r\n  //     .auth()\r\n  //     .signInWithEmailAndPassword(email, password)\r\n  //     .then(response => {\r\n  //       //console.log(response)\r\n  //       setIdToken(response.credential.idToken);\r\n  //       if (loginUsuario()) {\r\n  //         setUser(response);\r\n  //         return response;\r\n  //       } else {\r\n\r\n  //       }\r\n  //     }).catch(error => {\r\n\r\n  //     });\r\n  // };\r\n\r\n  const signup = (formValues) => {\r\n    return cadastroUsuario(formValues);\r\n  };\r\n\r\n  const cadastroUsuario = async (formValues) => {\r\n    try {\r\n      const response = await api.post(`/auth/google/cadastro`,\r\n        { ...formValues },\r\n        {\r\n          headers: {\r\n            'authorization': `Bearer ${idToken}`\r\n          }\r\n        })\r\n      console.log(response);\r\n      if (response.data === \"Usuário não cadastrado\") {\r\n        //Mandar pro form de cadastro\r\n        console.log(\"não cadastrado.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const signout = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        setIdToken(null);\r\n        setApiKey(null);\r\n        setUsuario(null);\r\n        setUser(null);\r\n      });\r\n  };\r\n\r\n  const sendPasswordResetEmail = email => {\r\n    return firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        return true;\r\n      });\r\n  };\r\n\r\n  const confirmPasswordReset = (code, password) => {\r\n    return firebase\r\n      .auth()\r\n      .confirmPasswordReset(code, password)\r\n      .then(() => {\r\n        return true;\r\n      });\r\n  };\r\n\r\n  const toggleShowWarning = () => {\r\n    setShowWarning(!showWarning);\r\n  }\r\n\r\n  // Subscribe to user on mount\r\n  // Because this sets state in the callback it will cause any ...\r\n  // ... component that utilizes this hook to re-render with the ...\r\n  // ... latest auth object.\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser(false);\r\n        setUsuario(false);\r\n      }\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Return the user object and auth methods\r\n  return {\r\n    user,\r\n    usuario,\r\n    idToken,\r\n    apiKey,\r\n    login,\r\n    loginUsuario,\r\n    showWarning,\r\n    signup,\r\n    signout,\r\n    sendPasswordResetEmail,\r\n    toggleShowWarning,\r\n    confirmPasswordReset\r\n  };\r\n}","\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function ListItemLink(props) {\r\n    const { icon, primary, to } = props;\r\n\r\n    const renderLink = React.useMemo(\r\n        () =>\r\n            React.forwardRef((itemProps, ref) => (\r\n                // with react-router-dom@^5.0.0 use `ref` instead of `innerRef`\r\n                <RouterLink to={to} {...itemProps} innerRef={ref} />\r\n            )),\r\n        [to],\r\n    );\r\n\r\n    return (\r\n        <li>\r\n            <ListItem button component={renderLink}>\r\n                <ListItemIcon>{icon}</ListItemIcon>\r\n                <ListItemText primary={primary} />\r\n            </ListItem>\r\n        </li>\r\n    );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n    icon: PropTypes.node.isRequired,\r\n    primary: PropTypes.node.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n};\r\n\r\n// polyfill required for react-router-dom < 5.0.0\r\nconst Link = React.forwardRef((props, ref) => <RouterLink {...props} innerRef={ref} />);\r\n\r\nfunction ListItemLinkShorthand(props) {\r\n    const { primary, to } = props;\r\n    return (\r\n        <li>\r\n            <ListItem button component={Link} to={to}>\r\n                <ListItemText primary={primary} />\r\n            </ListItem>\r\n        </li>\r\n    );\r\n}\r\n\r\nListItemLinkShorthand.propTypes = {\r\n    primary: PropTypes.node.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n};\r\n","import Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport React from 'react';\r\nimport { useAuth } from \"../customHooks/useAuth\";\r\nimport ListItemLink from \"./listItemLink\";\r\nimport { Divider, ListItemText, ListItemIcon } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar\r\n\r\n}));\r\n\r\nexport default function AppDrawer() {\r\n    const classes = useStyles();\r\n    const auth = useAuth();\r\n\r\n    if (auth.usuario && auth.apiKey) {\r\n        return (\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} />\r\n                <List>\r\n                    <ListItemLink to=\"/Mapa\" primary=\"Mapa\" icon={<MapIcon />} />\r\n                    <ListItemLink to=\"/Avisos\" primary=\"Avisos\" icon={<FeedbackIcon />} />\r\n                </List>\r\n                <Divider />\r\n                <List style={{ 'marginTop': 'auto' }}>\r\n                    <ListItem style={{'cursor':'pointer'}} onClick={() => {\r\n                        auth.signout()\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <ExitToAppIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Sair\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n}","import AppBar from '@material-ui/core/AppBar';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useAuth } from \"../customHooks/useAuth\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: \"#f46524\",\r\n        height: '10%'\r\n    },\r\n    toolBar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    link: {\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const auth = useAuth();\r\n\r\n    if (auth.usuario && auth.apiKey) {\r\n        return (\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        <Link component={RouterLink} to=\"/\" className={classes.link}>\r\n                            Defesa Civil de Contagem\r\n                    </Link>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\n\r\nconst useStyles = makeStyles({\r\n    margin: {\r\n        margin: 'auto',\r\n        marginTop: '15rem',\r\n        marginLeft: '50%'\r\n    }\r\n});\r\n\r\nexport default function Spinner() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.margin}>\r\n            <GridLoader\r\n                color={'#FF8500'}\r\n            />\r\n        </div>\r\n    )\r\n}","import { api } from \"./api\";\r\n\r\nexport const fetchAviso = async (id, apiKey) => {\r\n    try {\r\n        const result = await api.get(`/admin/avisos/${id}`, {},\r\n            {\r\n                headers: {\r\n                    'authorization': `Bearer ${apiKey}`\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                if (response.status == 200 && response.data) {\r\n                    return response.data;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n\r\n        if (result.fotos.length > 0) {\r\n            result.fotos.forEach(foto => {\r\n                foto.src = fetchImagem(foto.url, apiKey);\r\n            })\r\n        }\r\n\r\n        return result;\r\n\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n};\r\n\r\nexport const fetchAllAvisos = async (apiKey) => {\r\n    try {\r\n        let result = await api.get('/admin/avisos', {},\r\n            {\r\n                headers: {\r\n                    'authorization': `Bearer ${apiKey}`\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                if (response.status == 200 && response.data) {\r\n                    return response.data;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n\r\n        return result;\r\n\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n};\r\n\r\nexport const fetchImagem = async (url, apiKey) => {\r\n    try {\r\n        let result = await api.get(`${url}`, {},\r\n            {\r\n                headers: {\r\n                    'authorization': `Bearer ${apiKey}`\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                if (response.status == 200 && response.data) {\r\n                    return response.data;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n\r\n        return result;\r\n\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n};\r\n\r\nexport const updateAviso = async (aviso) => {\r\n    try {\r\n        const response = await api.put(`/admin/avisos/${aviso.id}`, { ...aviso });\r\n        // const response = await api.put(`/admin/Avisos/${aviso.id}`, { ...aviso });\r\n        return response;\r\n\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}","import Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport moment from 'moment';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Spinner from '../components/spinner';\r\nimport { useAuth } from \"../customHooks/useAuth\";\r\nimport { fetchAllAvisos } from '../customHooks/useAvisos';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderRadius: '0px',\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    tableWrapper: {\r\n        // maxHeight: 440,\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\nexport default function Chamados() {\r\n    const [avisos, setAvisos] = useState(null);\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const columns = [\r\n        { field: 'id', title: 'ID', minWidth: 10 },\r\n        { field: 'tipo', title: 'Tipo', minWidth: 50 },\r\n        { field: 'data', title: 'Data', minWidth: 50 },\r\n        { field: 'bairro', title: 'Bairro', minWidth: 50 },\r\n        { field: 'status', title: 'Status', minWidth: 50 },\r\n        { field: 'acao', title: '', minWidth: 50 },\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetchAllAvisos(auth.apiKey);\r\n            setAvisos(response);\r\n        };\r\n        fetchData();\r\n\r\n        // Limpa a assinatura antes do componente deixar a tela\r\n        return () => {\r\n            setAvisos(null);\r\n        }\r\n    }, []);\r\n\r\n    if (avisos && avisos.length > 0) {\r\n        let rows = [];\r\n        avisos.sort((a, b) => {\r\n            if (a.status > b.status) {\r\n                return 1;\r\n            }\r\n        })\r\n        avisos.forEach((item) => {\r\n            rows.push({\r\n                id: item.id,\r\n                // idSequencia: item.idSequencia,\r\n                tipo: item.tipo,\r\n                data: moment(item.dataHora).format(\"MM/DD/YYYY\"),\r\n                bairro: item.endereco.bairro,\r\n                status: item.status,\r\n                acao: (item.status == \"Pendente\") ? (\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n                        onClick={() => {\r\n                            history.push(`/ProcessarAviso/${item.id}`)\r\n                        }}\r\n                    >Processar</Button>\r\n                ) : (\r\n                        <Button variant=\"contained\" color=\"secondary\" className={classes.button}\r\n                            onClick={() => {\r\n                                history.push(`/DetalhesAviso/${item.id}`)\r\n                            }}\r\n                        >Detalhes</Button>\r\n                    )\r\n            })\r\n        })\r\n\r\n        return (\r\n            <MaterialTable\r\n                className={classes.root}\r\n                columns={columns}\r\n                data={rows}\r\n                title=\"Lista de avisos\"\r\n                localization={{\r\n                    pagination: {\r\n                        labelDisplayedRows: '{from}-{to} de {count}',\r\n                        labelRowsSelect: 'linhas',\r\n                        labelRowsPerPage: 'linhas por página'\r\n                    },\r\n                    toolbar: {\r\n                        nRowsSelected: '{0} linha(s) selecionadas',\r\n                        searchPlaceholder: 'Pesquisar',\r\n                        searchTooltip: 'Pesquisar'\r\n                    },\r\n                    header: {\r\n                        actions: 'Ações'\r\n                    },\r\n                    body: {\r\n                        emptyDataSourceMessage: 'Sem registros para exibir',\r\n                        filterRow: {\r\n                            filterTooltip: 'Filtro'\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    } else {\r\n        return <Spinner />\r\n    }\r\n}","import GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\n//import tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    imagem: {\r\n        maxHeight: \"200px\",\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n        background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n}));\r\n\r\nexport default function ListaImagem(props) {\r\n    const classes = useStyles();\r\n\r\n    if (props.imagens.length > 0) {\r\n        return (\r\n            <div className={classes.root}>\r\n                <GridList className={classes.gridList} cols={2.5}>\r\n                    {props.imagens.map(tile => (\r\n                        <GridListTile key={tile}>\r\n                            <img key={tile} src={tile} className={classes.imagem} />\r\n                            <GridListTileBar\r\n                                classes={{\r\n                                    root: classes.titleBar,\r\n                                    title: classes.title,\r\n                                }}\r\n                            />\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}","import Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport moment from 'moment';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport ListaImagem from \"../components/listaImagem\";\r\nimport Spinner from '../components/spinner';\r\nimport { fetchAviso } from '../customHooks/useAvisos';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(4),\r\n        textAlign: 'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    erro: {\r\n        color: '#ff0000',\r\n    },\r\n    textarea: {\r\n        minWidth: \"600px\",\r\n        minHeight: \"100px\",\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    title: {\r\n        textAlign: \"left\",\r\n        marginBottom: \"2rem\"\r\n    }\r\n}));\r\n\r\nexport default function DetalhesAviso() {\r\n    const classes = useStyles();\r\n    const [aviso, setAviso] = useState(null);\r\n\r\n    let history = useHistory();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let location = useLocation();\r\n    let avisoId = location.pathname.split(\"/\")\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetchAviso(avisoId[2])\r\n            setAviso(response.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (aviso) {\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    Detalhes do aviso {aviso.id}\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={12} md={3} ></Grid>\r\n                    <Grid item xs={12} md={3} >\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"tipo\">Tipo</InputLabel>\r\n                            <Input\r\n                                readOnly\r\n                                id=\"tipo\"\r\n                                value={aviso.tipo}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={2} >\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"id\">ID</InputLabel>\r\n                            <Input\r\n                                readOnly\r\n                                id=\"id\"\r\n                                value={aviso.id}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4} ></Grid>\r\n\r\n                    <Grid item xs={12} md={8} >\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"Informant\">Informante</InputLabel>\r\n                            <Input\r\n                                readOnly\r\n                                id=\"Informant\"\r\n                                value={aviso.usuario_nome}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={4} >\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"data\">Data/Hora</InputLabel>\r\n                            <Input\r\n                                readOnly\r\n                                id=\"data\"\r\n                                value={moment(aviso.dataHora).format(\"DD/MM/YYYY hh:mm\")}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={8} >\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                            <Input\r\n                                readOnly\r\n                                id=\"email\"\r\n                                value={aviso.usuario_email}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={4} >\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"telefone\">Telefone</InputLabel>\r\n                            <Input\r\n                                readOnly\r\n                                id=\"telefone\"\r\n                                value={aviso.usuario_telefone}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6} >\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"logradouro\" >Endereço da ocorrência</InputLabel>\r\n                            <Input\r\n                                id=\"logradouro\"\r\n                                value={aviso.logradouro}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={2}>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"numero\" >Número</InputLabel>\r\n                            <Input\r\n                                id=\"numero\"\r\n                                type=\"number\"\r\n                                value={aviso.numero}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"complemento\">Complemento</InputLabel>\r\n                            <Input\r\n                                readOnly\r\n                                id=\"complemento\"\r\n                                value={aviso.complemento}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"bairro\" shrink>Bairro</InputLabel>\r\n                            <Input\r\n                                id=\"bairro\"\r\n                                value={aviso.bairro}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    {/* <Grid item xs={12} md={4}>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"regional\">Regional</InputLabel>\r\n                            <Input\r\n                                id=\"regional\"\r\n                            />\r\n                        </FormControl>\r\n                    </Grid> */}\r\n\r\n                    <Grid item xs={12} md={12}>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <TextareaAutosize rows={3}\r\n                                className={classes.textarea}\r\n                                value={aviso.descricao}\r\n                                placeholder=\"Descrição\"\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ListaImagem />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={() => history.push('/Avisos')} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                            Voltar para a lista\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper >\r\n        )\r\n    } else {\r\n        return <Spinner />\r\n    }\r\n}","import Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport \"firebase/auth\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useAuth } from '../customHooks/useAuth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'absolute',\r\n        bottom: '2rem',\r\n        right: '3rem'\r\n    }\r\n}));\r\n\r\n\r\nexport default function WarnNotLoggedUser() {\r\n    const auth = useAuth();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const warnUser = () => {\r\n            if (auth.showWarning) {\r\n                setTimeout(() => {\r\n                    auth.toggleShowWarning()\r\n                }, 3000);\r\n            };\r\n        }\r\n        warnUser();\r\n    }, [auth.showWarning]);\r\n\r\n    if (auth.showWarning) {\r\n        return (\r\n            <Chip className={classes.root}\r\n                color=\"secondary\"\r\n                deleteIcon={<DoneIcon />}\r\n                label=\"Para utilizar o sistema, faça o login.\"\r\n            // onDelete={auth.toggleShowWarning()} \r\n            />\r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n}","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"firebase/auth\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport WarnNotLoggedUser from \"../components/warnNotLoggedUser\";\r\nimport { useAuth } from '../customHooks/useAuth';\r\nimport logo from \"../img/logo.jpg\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.getContrastText(\"#f46524\"),\r\n        '&:hover': {\r\n            backgroundColor: \"#a54318\",\r\n        },\r\n        backgroundColor: \"#f46524\",\r\n    },\r\n    card: {\r\n        margin: 'auto',\r\n        maxWidth: 345,\r\n        minWidth: 275,\r\n    },\r\n}));\r\n\r\nexport default function Inicio() {\r\n    const classes = useStyles();\r\n    const auth = useAuth();\r\n    const [makeRequest, setMakeRequest] = useState(false);\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    useEffect(() => {\r\n        const login = async () => {\r\n            if (makeRequest) {\r\n                await auth.loginUsuario();\r\n                history.replace(from);\r\n                setMakeRequest(false);\r\n            };\r\n        }\r\n        login();\r\n    }, [makeRequest]);\r\n\r\n    if (auth.usuario && auth.apiKey) {\r\n        history.push('/Mapa')\r\n        return null;\r\n    } else {\r\n        return (\r\n            <div className={classes.content}>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Defesa Civil de Contagem - MG\"\r\n                            image={logo}\r\n                            title=\"Defesa Civil de Contagem - MG\"\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                        >\r\n                            <Grid item>\r\n                                <Button variant=\"contained\"\r\n                                    type=\"submit\" className={classes.button}\r\n                                    onClick={() => setMakeRequest(true)}>\r\n                                    Acessar\r\n                            </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n                <WarnNotLoggedUser />\r\n            </div>\r\n        );\r\n    }\r\n}","//https://github.com/fullstackreact/google-maps-react\r\nimport { GoogleMap, InfoWindow, KmlLayer, Marker, useLoadScript } from '@react-google-maps/api';\r\nimport * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport Spinner from '../components/spinner';\r\n\r\nexport default function Mapa() {\r\n    const [markers, setMarkers] = useState([]);\r\n    const [showingInfoWindow, setShowingInfoWindow] = useState(false);\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n    const [selectedPlace, setSelectedPlace] = useState(null);\r\n    const [position, setPosition] = useState(null)\r\n    const { isLoaded, loadError } = useLoadScript({\r\n        googleMapsApiKey: \"AIzaSyAFCWhrDp1Unfxx5TKCqlkEYx2xB5Tj-HU\" // ,\r\n        // ...otherOptions\r\n    })\r\n\r\n    const onMarkerClick = (props, marker, e) => {\r\n        setPosition(props.latLng);\r\n        setSelectedPlace(props);\r\n        setActiveMarker(marker);\r\n        setShowingInfoWindow(true);\r\n    }\r\n\r\n    const onMapClicked = (props) => {\r\n        if (showingInfoWindow) {\r\n            setShowingInfoWindow(false);\r\n            setActiveMarker(null);\r\n        }\r\n    };\r\n\r\n    const renderMap = () => {\r\n        // wrapping to a function is useful in case you want to access `window.google`\r\n        // to eg. setup options or create latLng object, it won't be available otherwise\r\n        // feel free to render directly if you don't need that\r\n        // const onLoad = useCallback(\r\n        //     function onLoad(mapInstance) {\r\n        //         // do something with map Instance\r\n        //     }\r\n        // )\r\n        return <GoogleMap\r\n            onClick={onMapClicked}\r\n            mapContainerStyle={{\r\n                height: \"90%\",\r\n                width: \"100%\"\r\n            }}\r\n            zoom={12}\r\n            center={{\r\n                lat: -19.919387,\r\n                lng: - 44.080628\r\n            }}\r\n        >\r\n            {/* <Markers /> */}\r\n\r\n            {markers.map(marker => (\r\n                <Marker\r\n                    key={marker.id}\r\n                    title={marker.tipo}\r\n                    position={{\r\n                        lat: marker.lat,\r\n                        lng: marker.lng\r\n                    }}\r\n                    onClick={onMarkerClick}\r\n                />\r\n            ))}\r\n            {(selectedPlace) ?\r\n                <InfoWindow\r\n                    marker={activeMarker}\r\n                    visible={showingInfoWindow}\r\n                    position={position}\r\n                >\r\n                    <div style={{\r\n                        background: `white`,\r\n                        border: `1px solid #ccc`,\r\n                        padding: 15,\r\n                        fontSize: `1rem`\r\n                    }}>\r\n                        <h1>{selectedPlace.tipo}</h1>\r\n                    </div>\r\n                </InfoWindow>\r\n                : \"\"\r\n            }}\r\n            <KmlLayer\r\n                url={`http://www.google.com/maps/d/u/4/kml?mid=1hx2bkGrTtsN6E7ttxSFBe0N5fDRk8xKw&lid=mWjduN2aIeo&ver=${Math.random()}`}\r\n                options={{ preserveViewport: true }}\r\n            />\r\n        </GoogleMap >\r\n    }\r\n\r\n    if (loadError) {\r\n        return <div>Houve um problema no carregamento do mapa. Tente novamente em alguns instantes.</div>\r\n    }\r\n\r\n    if (isLoaded) {\r\n        return (\r\n            <iframe src=\"https://www.google.com/maps/d/u/0/embed?mid=1FoPYN3YEQcsF6rn_j7-0iVYF6K4e-24F&t=m&msa=b\" width=\"100%\" height=\"89%\"></iframe>\r\n        )\r\n    } else {\r\n        return <Spinner />\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n}));\r\n\r\nexport default function NotFound() {\r\n    const classes = useStyles();\r\n    let location = useLocation();\r\n    let pathname = location.pathname.substr(1);\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.root}>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    Página <code>{pathname}</code> não encontrada.\r\n        </Typography>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import \"firebase/auth\";\r\nimport React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../customHooks/useAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n\r\n    if (auth.usuario && auth.apiKey) {\r\n        return (\r\n            <Route {...rest} render={() => children} />\r\n        )\r\n    } else {\r\n        auth.signout();\r\n        history.push('/')\r\n        // auth.toggleShowWarning();\r\n        return null\r\n    };\r\n}","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, inputs) => {\r\n\r\n  const [values, setValues] = useState(inputs);\r\n  const [errors, setErrors] = useState(inputs);\r\n\r\n  const handleSubmit = event => {\r\n    if (event) event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n  };\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors\r\n  };\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Send from '@material-ui/icons/Send';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ListaImagem from \"../components/listaImagem\";\r\nimport { updateAviso } from '../customHooks/useAvisos';\r\nimport { useForm } from \"../customHooks/useForm\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(10),\r\n        margin: '5rem',\r\n        textAlign: 'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    erro: {\r\n        color: '#ff0000',\r\n    },\r\n    textarea: {\r\n        minWidth: \"600px\",\r\n        minHeight: \"100px\",\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    title: {\r\n        marginBottom: '4rem'\r\n    }\r\n}));\r\n\r\nexport default function AvisoForm(props) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [aviso] = useState(props.aviso);\r\n    const [open, setOpen] = useState(false);\r\n    const { errors, values, handleChange, handleSubmit } = useForm(callbackSubmit, aviso);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function callbackSubmit() {\r\n        aviso.status = \"Pendente\";\r\n        aviso.timestamp = aviso.timestamp;\r\n        aviso.coordenadas = {\r\n            lat: aviso.coordenadas.lat,\r\n            lng: aviso.coordenadas.lng\r\n        };\r\n\r\n        aviso.status = \"Processado\";\r\n        updateAviso(aviso);\r\n        history.push('/Avisos');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.root}>\r\n                <Typography variant=\"h3\" gutterBottom className={classes.title}>\r\n                    Detalhes do aviso</Typography>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"center\"\r\n                        spacing={2}\r\n                    >\r\n                        <Grid item xs={12} md={2} >\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"tipo\">Tipo</InputLabel>\r\n                                <Input\r\n                                    name=\"tipo\"\r\n                                    defaultValue={aviso.tipo}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"id\">ID</InputLabel>\r\n                                <Input\r\n                                    readOnly\r\n                                    name=\"id\"\r\n                                    value={aviso.id}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} ></Grid>\r\n\r\n                        <Grid item xs={12} md={8} >\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"nome\">Informante</InputLabel>\r\n                                <Input\r\n                                    name=\"usuario_nome\"\r\n                                    defaultValue={aviso.user_id.nome}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4} >\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"dataHora\">Data/Hora</InputLabel>\r\n                                <Input\r\n                                    readOnly\r\n                                    name=\"dataHora\"\r\n                                    value={moment(aviso.dataHora).format(\"DD/MM/YYYY hh:mm\")}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={8} >\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                                <Input\r\n                                    readOnly\r\n                                    name=\"usuario_email\"\r\n                                    defaultValue={aviso.user_id.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={4} >\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"telefone\">Telefone</InputLabel>\r\n                                <Input\r\n                                    name=\"usuario_telefone\"\r\n                                    defaultValue={aviso.user_id.telefone}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6} >\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"logradouro\" >Endereço da ocorrência</InputLabel>\r\n                                <Input\r\n                                    name=\"aviso.endereco.rua\"\r\n                                    defaultValue={aviso.endereco.rua}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={2}>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"numero\" >Número</InputLabel>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"aviso.endereco.numero\"\r\n                                    defaultValue={aviso.endereco.numero}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"complemento\">Complemento</InputLabel>\r\n                                <Input\r\n                                    name=\"aviso.endereco.complemento\"\r\n                                    defaultValue={aviso.endereco.complemento}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"bairro\" shrink>Bairro</InputLabel>\r\n                                <Input\r\n                                    name=\"aviso.endereco.bairro\"\r\n                                    defaultValue={aviso.endereco.bairro}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {/* <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"regional\">Regional</InputLabel>\r\n                                <Input\r\n                                    name=\"aviso.endereco.regional\"\r\n                                    defaultValue={aviso.endereco.regional}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid> */}\r\n\r\n                        <Grid item xs={12} md={12}>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <TextareaAutosize rows={2}\r\n                                    className={classes.textarea}\r\n                                    name=\"aviso.descricao\"\r\n                                    defaultValue={aviso.descricao}\r\n                                    placeholder=\"Descrição\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <ListaImagem imagens={aviso.fotos} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button onClick={() => history.push('/Avisos')} variant=\"contained\" color=\"secondary\" className={classes.button}>Voltar\r\n                        </Button>\r\n                            <Button onClick={handleClickOpen} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                                Criar Chamado\r\n                        <Send className={classes.rightIcon} />\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper >\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    Confirmar criação de chamado</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Deseja criar esse chamado?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}\r\n                        color=\"primary\" className={classes.button}>\r\n                        Cancelar\r\n                        </Button>\r\n                    <Button type=\"submit\" onClick={handleClose, handleSubmit}\r\n                        color=\"primary\" className={classes.button}>\r\n                        Confirmar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Spinner from '../components/spinner';\r\nimport { useAuth } from \"../customHooks/useAuth\";\r\nimport { fetchAviso } from '../customHooks/useAvisos';\r\nimport AvisoForm from '../forms/aviso';\r\n\r\nexport default function ProcessarAviso() {\r\n    const [aviso, setAviso] = useState(null);\r\n    const auth = useAuth();\r\n\r\n    let location = useLocation();\r\n    let avisoId = location.pathname.split(\"/\")\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetchAviso(avisoId[2], auth.apiKey)\r\n            setAviso(response);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (aviso) {\r\n        return <AvisoForm aviso={aviso} />\r\n    } else {\r\n        return <Spinner />\r\n    }\r\n}","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"firebase/auth\";\r\nimport * as React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AppDrawer from './components/drawer';\r\nimport Header from './components/header';\r\nimport Avisos from \"./containers/Avisos\";\r\nimport DetalhesAviso from './containers/DetalhesAviso';\r\nimport Inicio from './containers/Inicio';\r\nimport Mapa from \"./containers/Mapa\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport PrivateRoute from './containers/PrivateRoute';\r\nimport ProcessarAviso from './containers/ProcessarAviso';\r\nimport { ProvideAuth } from \"./customHooks/useAuth\";\r\nimport fundo from \"./img/background.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100vh',\r\n    backgroundImage: `url(${fundo})`,\r\n    backgroundSize: 'cover',\r\n    overflowY: 'auto',\r\n\r\n  },\r\n  main: {\r\n    flexGrow: 1,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n    overflowY: 'auto',\r\n    height: '100%'\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ProvideAuth>\r\n        <CssBaseline />\r\n        <Header ></Header>\r\n        <AppDrawer />\r\n        <main className={classes.main}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route exact path=\"/defesa-civil-contagem\" component={Inicio} />\r\n            <PrivateRoute exact path=\"/defesa-civil-contagemAvisos\" component={Avisos} />\r\n            <PrivateRoute exact path=\"/defesa-civil-contagemMapa\" component={Mapa} />\r\n            <PrivateRoute exact path=\"/defesa-civil-contagemDetalhesAviso/:id\" component={DetalhesAviso} />\r\n            <PrivateRoute exact path=\"/defesa-civil-contagemProcessarAviso/:id\" component={ProcessarAviso} />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </main>\r\n      </ProvideAuth>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Router >\r\n        <App />\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}